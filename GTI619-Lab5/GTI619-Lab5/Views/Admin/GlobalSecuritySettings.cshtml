@model GTI619_Lab5.Models.Admin.GlobalSecuritySettingsModel

@{
    ViewBag.Title = "Global Security Settings";
}

<h2>Global Security Settings</h2>
<hr/>
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            @Html.LabelFor(model => model.MinPasswordLength, htmlAttributes: new { @class = "control-label col-md-3" })
            <div class="col-md-9">
                @Html.EditorFor(model => model.MinPasswordLength, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.MinPasswordLength, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.MaxLoginAttempt, htmlAttributes: new { @class = "control-label col-md-3" })
            <div class="col-md-9">
                @Html.EditorFor(model => model.MaxLoginAttempt, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.MaxLoginAttempt, "", new { @class = "text-danger" })
            </div>
        </div>


        <fieldset class="col-md-offset-3 col-md-9">
            <legend>Password Policy</legend>

            <div class="form-group">
                <div class="col-md-12">
                    <div class="checkbox">
                        <label>
                            @Html.EditorFor(model => model.PasswordShouldHaveUpperCase)
                            @Html.DisplayNameFor(model => model.PasswordShouldHaveUpperCase)
                        </label>
                        @Html.ValidationMessageFor(model => model.PasswordShouldHaveUpperCase, "", new {@class = "text-danger"})
                    </div>
                </div>
            </div>
            <div class="form-group">
                <div class="col-md-12">
                    <div class="checkbox">
                        <label>
                            @Html.EditorFor(model => model.PasswordShouldHaveLowerCase)
                            @Html.DisplayNameFor(model => model.PasswordShouldHaveLowerCase)
                        </label>
                        @Html.ValidationMessageFor(model => model.PasswordShouldHaveLowerCase, "", new {@class = "text-danger"})
                    </div>
                </div>
            </div>
            <div class="form-group">
                <div class="col-md-12">
                    <div class="checkbox">
                        <label>
                            @Html.EditorFor(model => model.PasswordShouldHaveSpecialChars)
                            @Html.DisplayNameFor(model => model.PasswordShouldHaveSpecialChars)
                        </label>
                        @Html.ValidationMessageFor(model => model.PasswordShouldHaveSpecialChars, "", new {@class = "text-danger"})
                    </div>
                </div>
            </div>
            <div class="form-group">
                <div class="col-md-12">
                    <div class="checkbox">
                        <label>
                            @Html.EditorFor(model => model.PasswordShouldHaveNumbers)
                            @Html.DisplayNameFor(model => model.PasswordShouldHaveNumbers)
                        </label>
                        @Html.ValidationMessageFor(model => model.PasswordShouldHaveNumbers, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </fieldset>

        <div class="form-group">
            @Html.LabelFor(model => model.AdminPassword, htmlAttributes: new { @class = "control-label col-md-3" })
            <div class="col-md-9">
                @Html.PasswordFor(model => model.AdminPassword, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.AdminPassword, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-3 col-md-9">
                <input type="submit" value="Save" class="btn btn-primary" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Cancel", "Index")
</div>
